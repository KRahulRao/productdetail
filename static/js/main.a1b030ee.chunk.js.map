{"version":3,"sources":["assets/images/logo.png","constants/appConstants.js","components/TodoBoard/oneRow.jsx","components/Header/Header.jsx","components/Users/userList.jsx","components/Users/userPosts.jsx","components/Users/postDetails.jsx","components/Footer/Footer.jsx","components/ProductDetail/ProductDetail.jsx","components/RecommendedProducts/RecommendedProducts.jsx","components/TodoBoard/ToDoBoard.jsx","App.js","Fetchers/DataFetcher.js","stores/TodoStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","appConstants","renderObject","lhs","operator","rhs","oneRow","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderFirstCol","firstColList","map","e","index","react_default","a","createElement","key","value","handleChange","setState","selectedLhs","target","todoStore","console","log","saveOperator","selectedOperator","saveRhs","state","options","i","l","length","selected","push","selectedRhs","selectedRhsTxt","addData","allData","_this2","filter","className","onChange","bind","op","multiple","type","pattern","Component","Header","inject","userList","renderTableRow","assertThisInitialized","renderTableData","allUsers","headers","event","concat","TodoBoard_oneRow","getData","user","name","company","id","onClick","openPosts","header","renderHeaders","allPosts","title","body","openPostDetails","showComments","store","getPostcomments","then","response","json","data","allComments","renderComments","comment","email","postDetails","deletePosts","handleWindowSizeChange","width","window","innerWidth","toggleMenu","isMobileMenuVisible","myFunction","x","document","getElementById","showPosts","showUsers","showPostDetails","allPostsOfUser","addEventListener","removeEventListener","Fragment","class","aria-hidden","href","src","logo","alt","cartCount","Footer","style","ToDoBoard","productDetails","productImage","activeTab","fetchProductDetails","fetchProductImages","_this3","description","price","changeTab","addToBag","url","SampleNextArrow","display","background","SamplePrevArrow","allImages","image","settings","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","lib_default","renderSimilarProducts","fetchAllImages","components_Header_Header","ProductDetail","RecommendedProducts","components_Footer_Footer","App","components_TodoBoard_ToDoBoard","ROOT_URL","DataFetcher","fetch","TodoStore","datafetcher","action","Boolean","location","hostname","match","ReactDOM","render","index_module","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1b030ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d98df3fd.png\";","const appConstants = {\r\n        renderObject: [\r\n            { lhs: \"Account\", operator: [\"Contains\",\"Not Contains\"],rhs:[1,2,3,4,5,6,7,8,9,10] },\r\n            { lhs: \"Country\", operator: [\"Contains\",\"Not Contains\"],rhs:['country1','country2','country3','country4','country5'] },\r\n            { lhs: \"Campaign Name\", operator: [\"Starts with\",\"Contains\",\"Not Contains\"] },\r\n            { lhs: \"Revenue\", operator: [\">\", \"<\",\">=\",\"<=\",\"=\",\"!=\"]  },\r\n        ],\r\n        // instruction: [<AWSInstruction />]\r\n}\r\nexport default appConstants;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"./ToDoBoard.scss\";\r\nimport appConstants from '../../constants/appConstants';\r\nimport  Button from 'react-bootstrap/Button';\r\n\r\n\r\n@observer class oneRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedLhs:'',\r\n            allData:[],\r\n            selectedRhs:[],\r\n            selectedOperator:'',\r\n            selectedRhsTxt:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ allData: appConstants.renderObject });\r\n        \r\n    }\r\n    renderFirstCol = (firstColList) => {\r\n        return firstColList.map((e,index)=>{\r\n           return   <option key={index} value={e.lhs}>{e.lhs}</option> ;\r\n            \r\n        });\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({selectedLhs: e.target.value});\r\n        this.props.todoStore.selectedLhs =  e.target.value;\r\n        console.log(this.props.todoStore.selectedLhs);\r\n    }\r\n\r\n    saveOperator = (e) =>{\r\n        console.log(e.target.value);\r\n        debugger;\r\n        this.setState({selectedOperator: e.target.value});\r\n        this.props.todoStore.selectedOperator =  e.target.value;\r\n    }\r\n    saveRhs = (e)=>{\r\n        let {selectedLhs } = this.state;\r\n        var options = e.target.options;\r\n        let value = [];\r\n        if(selectedLhs === 'Account' || selectedLhs === 'Country'){\r\n        for (var i = 0, l = options.length; i < l; i++) {\r\n          if (options[i].selected) {\r\n            value.push(options[i].value);\r\n          }\r\n        }\r\n        this.setState({selectedRhs: value});\r\n        this.props.todoStore.selectedRhs = value;\r\n    }else{\r\n        this.setState({selectedRhsTxt: value});\r\n        this.props.todoStore.selectedRhsTxt = value;\r\n    }\r\n        \r\n        this.props.todoStore.addData();\r\n    }\r\n    \r\n    render(){\r\n        let oneRow = this.state.allData.filter(e => {\r\n            return e.lhs === this.state.selectedLhs\r\n          })\r\n        //   console.log(oneRow[0]);\r\n          \r\n        return(\r\n                <div className=\"todo-input-box\">\r\n                    <select value={this.state.selectedLhs} onChange={this.handleChange.bind(this)}>\r\n                        {this.renderFirstCol(appConstants.renderObject)}\r\n                    </select>\r\n                    {  (oneRow.length!==0)  ? <select onChange={this.saveOperator.bind(this)} >\r\n                            {\r\n                    \r\n                                oneRow[0].operator.map((op, i) => {\r\n                                return <option>{op}</option>\r\n                                }) \r\n                            }\r\n                            </select>  : null\r\n                    }\r\n                    {  (oneRow.length!==0)   ?  ( (oneRow[0].rhs) ? <select className=\"mdb-select md-form\" onChange={this.saveRhs.bind(this)} multiple>\r\n                        {\r\n                            oneRow[0].rhs.map((op, i) => {\r\n                            return <option>{op}</option>\r\n                            }) \r\n                       \r\n                        }\r\n                        </select>  : (this.selectedLhs === 'Campaign Name')  ? <input onChange={this.saveRhs.bind(this)} type=\"text\"/> : <input onChange={this.saveRhs.bind(this)}   pattern='^\\d*(\\.\\d{0,2})?$' type=\"text\"/> \r\n                     ) : null\r\n                    }\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default oneRow;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport logo from '../../assets/images/logo.png';\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport UserList from '../Users/userList';\r\nimport UserPosts from '../Users/userPosts';\r\nimport PostDetails from '../Users/postDetails';\r\n\r\n@inject('todoStore')\r\n@observer class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.addNewRow = this.addNewRow.bind(this);\r\n    // this.submit = this.submit.bind(this);\r\n    this.state = {\r\n      allUsers: [],\r\n      headers: ['Name', 'Company', 'Posts'],\r\n      showPosts: false,\r\n      showUsers: true,\r\n      showPostDetails: false,\r\n      allPostsOfUser: [],\r\n      postDetails: {},\r\n      width: window.innerWidth,\r\n      isMobileMenuVisible: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowSizeChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowSizeChange);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.setState({\r\n      width: window.innerWidth\r\n    });\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({\r\n      isMobileMenuVisible: !this.state.isMobileMenuVisible\r\n    });\r\n  }\r\n\r\n  myFunction = () => {\r\n    // debugger\r\n    var x = document.getElementById(\"myTopnav\");\r\n    if (x.className === \"topnav\") {\r\n      x.className += \" responsive\";\r\n    } else {\r\n      x.className = \"topnav\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //   console.log(oneRow[0]);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div class=\"top-header-bar\">\r\n          <p class=\"txt-center\">Free us shipping & return</p>\r\n        </div>\r\n        <header id=\"split\">\r\n          <div className=\"c-container\">\r\n\r\n            {\r\n              this.state.width <= 767 ? \r\n                <React.Fragment>\r\n                  <div className=\"mobile-menu\">\r\n                    <button className=\"menu-btn btn-normal\" onClick={this.toggleMenu}>\r\n                      <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <ul className={`l-menu ${this.state.isMobileMenuVisible ? 'slide-in' : ''}`}>\r\n                      <li className=\"text-right\"><span onClick={this.toggleMenu}>X</span></li>\r\n                      <li><a href=\"#\">Men</a></li>\r\n                      <li><a href=\"#\">Women</a></li>\r\n                      <li><a href=\"#\">About</a></li>\r\n                    </ul>\r\n                    <div className=\"logo-wrapper\">\r\n                      <a href=\"#\"><img src={logo} alt=\"logo\" /></a>\r\n                    </div>\r\n                    <ul className=\"r-menu\">\r\n                      <li><button className=\"btn-normal\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></button></li>\r\n                      <li><button className=\"btn-normal cart-btn\"><span>2</span><i class=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i></button></li>\r\n                    </ul>\r\n                  </div>\r\n                  \r\n                </React.Fragment>\r\n               :\r\n                <div className=\"desktop-menu\">\r\n                  <ul className=\"l-menu\">\r\n                    <li><a href=\"#\">Men</a></li>\r\n                    <li><a href=\"#\">Women</a></li>\r\n                  </ul>\r\n                  <div className=\"logo-wrapper\">\r\n                    <a href=\"#\"><img src={logo} alt=\"logo\" /></a>\r\n                  </div>\r\n                  <ul className=\"r-menu\">\r\n                    <li><a href=\"#\">About</a></li>\r\n                    <li><button className=\"btn-normal\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></button></li>\r\n                    <li><button className=\"btn-normal cart-btn\"><span>{this.props.cartCount}</span><i class=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i></button></li>\r\n                  </ul>\r\n                </div>\r\n            }\r\n\r\n            \r\n          </div>\r\n        </header>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport Onerow from '../TodoBoard/oneRow';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { func } from 'prop-types';\r\n\r\n@inject('todoStore')\r\n@observer class userList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderTableRow = this.renderTableRow.bind(this);\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n        this.state = {\r\n           allUsers:[],\r\n           headers:['Name','Company','Posts']\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { allUsers } = this.state;\r\n\r\n     \r\n        \r\n    }\r\n\r\n    addNewRow(event){\r\n        let { allData } = this.state;\r\n        this.setState({\r\n            allData: allData.concat(<Onerow todoStore={this.props.todoStore} key={allData.length} />)\r\n        });\r\n    }\r\n    submit(){\r\n       // let { allData } = this.state;\r\n        // this.props.todoStore.addData = allData;\r\n      let totalData = this.props.todoStore.getData();\r\n      console.log(this.props.todoStore.allData);\r\n    }\r\n\r\n    renderTableRow(){\r\n        let { allUsers } = this.state;\r\n            return allUsers.map( (user) => {\r\n                return <tr>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.company}</td>\r\n                </tr>\r\n           // <div>{user}</div>\r\n        })\r\n    }\r\n    renderTableData() {\r\n        return this.props.allUsers.map((user, index) => {\r\n           return (\r\n              <tr key={user.id}>\r\n                 <td>{user.name}</td>\r\n                 <td>{user.company.name}</td>\r\n                 <td onClick={ ()=> { this.props.openPosts(user.id)}}><p className='viewPosts'>Blog Posts</p></td>\r\n              </tr>\r\n           )\r\n        })\r\n     }\r\n\r\n     renderHeaders(){\r\n          return this.state.headers.map((header) =>{\r\n              return (\r\n                <th>\r\n                  <td>{header}</td>\r\n                </th>\r\n              )\r\n            })\r\n     }\r\n    \r\n    render(){\r\n        \r\n        let { allUsers } = this.state;\r\n        console.log(this.state);\r\n        // let formStyle ={\r\n        //      display:'inline-flex',\r\n        //      textAlign: 'justify',\r\n        //      msTextJustify: 'distribute-all-lines',\r\n        //      textJustify: 'distribute-all-lines',\r\n        //      marginTop:'20px'\r\n        // }\r\n    \r\n        //   console.log(oneRow[0]);\r\n          \r\n        return(\r\n            <div className=\"todo-wrapper\">\r\n                <table>\r\n                    <thead>\r\n                        {this.renderHeaders()}\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* {\r\n                          this.renderTableRow()\r\n                        } */}\r\n                        {this.renderTableData()}                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default userList;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport Onerow from '../TodoBoard/oneRow';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { func } from 'prop-types';\r\n\r\n@inject('todoStore')\r\n@observer class userList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           allUsers:[],\r\n           headers:['Name']\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { allUsers } = this.state;\r\n\r\n     \r\n        \r\n    }\r\n\r\n     renderHeaders(){\r\n          return this.state.headers.map((header) =>{\r\n              return (\r\n                <th>\r\n                  <td>{header}</td>\r\n                </th>\r\n              )\r\n            })\r\n     }\r\n     renderTableData() {\r\n         console.log(this.props.allPosts);\r\n        return this.props.allPosts.map((user, index) => {\r\n           return (\r\n              <tr key={user.id}>\r\n                 <td>\r\n                 <p>{user.title}</p>\r\n                 <p>{user.body}</p>\r\n                 </td>\r\n                 <td onClick={ ()=> { this.props.openPostDetails(user.id)}}><p className='viewPosts'>View Details</p></td>\r\n              </tr>\r\n           )\r\n        })\r\n     }\r\n    \r\n    render(){\r\n        \r\n        let { allUsers } = this.state;  \r\n        return(\r\n            <div className=\"todo-wrapper\">\r\n                <table className='postsList'>\r\n                    <thead>\r\n                        {this.renderHeaders()}\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* {\r\n                          this.renderTableRow()\r\n                        } */}\r\n                        {this.renderTableData()}                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default userList;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport Onerow from '../TodoBoard/oneRow';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { func } from 'prop-types';\r\n\r\n@observer class userList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           allUsers:[],\r\n           headers:['Post Details'],\r\n           allComments:[],\r\n           showComments:false\r\n        }\r\n        this.showComments.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { allUsers } = this.state;\r\n\r\n     \r\n        \r\n    }\r\n\r\n     showComments = (id) => {\r\n        this.props.store.getPostcomments(id)\r\n        .then((response)=>{\r\n            return response.json()\r\n        }).then((data)=>{\r\n            this.setState({allComments: data,showComments:true});\r\n        })\r\n     }\r\n\r\n     renderComments = () => {\r\n        return this.state.allComments.map((comment) =>{\r\n            return (\r\n              <tr>\r\n                <td>\r\n                    <p>{comment.name}</p>\r\n                    <p>{comment.email}</p>\r\n                    <p>{comment.body}</p>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })\r\n   }\r\n\r\n     renderTableData() {\r\n         console.log(this.props.postDetails);\r\n           return (\r\n               <div>\r\n                    <tr>\r\n                        <td>\r\n                            <p><span><b>Title</b></span> <span onClick={()=> this.props.deletePosts(this.props.postDetails.id)}  className='link-btn'>Delete</span></p>\r\n                             <p>{this.props.postDetails.title}</p>\r\n                             <p>{this.props.postDetails.body}</p>\r\n                        </td>\r\n                        {/* <td onClick={ ()=> { this.props.openPostDetails(user.id)}}><p className='viewPosts'>View Details</p></td> */}\r\n                    </tr>\r\n                    <tr>\r\n                        <span onClick={() => this.showComments(this.props.postDetails.id) } className='link-btn'>Show Comments</span>\r\n                    </tr>\r\n                    { this.state.showComments ?  this.renderComments() : null }\r\n                </div> \r\n           )\r\n       \r\n     }\r\n    \r\n    render(){\r\n        \r\n        let { allUsers } = this.state;  \r\n        return(\r\n            <div className=\"todo-wrapper\">\r\n                <table className='postsList'>\r\n                    <tbody>\r\n                        {/* {\r\n                          this.renderTableRow()\r\n                        } */}\r\n                        {this.renderTableData()}                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default userList;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"./Footer.scss\";\r\n\r\n@observer class Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.addNewRow = this.addNewRow.bind(this);\r\n    // this.submit = this.submit.bind(this);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    //   console.log(oneRow[0]);\r\n\r\n    return (\r\n        <div class=\"footer\">\r\n        <div class=\"contain\">\r\n        <div class=\"col\">\r\n          <h1>Men</h1>\r\n          <ul>\r\n            <li>OCA High</li>\r\n            <li>OCA Low</li>\r\n            <li>CATIBA High</li>\r\n            <li>OCA Low</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h1>Women</h1>\r\n          <ul>\r\n            <li>OCA High</li>\r\n            <li>OCA Low</li>\r\n            <li>CATIBA High</li>\r\n            <li>OCA Low</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h1>Support</h1>\r\n          <ul>\r\n            <li>FAQ</li>\r\n            <li>Returns</li>\r\n            <li>Live Chat</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h1>About</h1>\r\n          <ul>\r\n            <li>Mission</li>\r\n            <li>Vision</li>\r\n            <li>Future</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h1>Pop Up Stories</h1>\r\n          <ul>\r\n            <li>Find near you</li>\r\n            <li>Register</li>\r\n            <li>Open ticket</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col social\">\r\n          <h1>News Letter</h1>\r\n          <ul>\r\n            <li>\r\n                <img src=\"https://svgshare.com/i/5fq.svg\" width=\"32\" style={{\"width\": \"32px\"}}/>\r\n                <img src=\"https://svgshare.com/i/5f_.svg\" width=\"32\" style={{\"width\": \"32px\"}}/>\r\n            </li>\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      <div class=\"clearfix\"></div>\r\n      </div>\r\n      </div>   \r\n      )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport UserList from '../Users/userList';\r\nimport UserPosts from '../Users/userPosts';\r\nimport PostDetails from '../Users/postDetails';\r\nimport Header from '../Header/Header'\r\n\r\n@observer class ToDoBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.addNewRow = this.addNewRow.bind(this);\r\n    // this.submit = this.submit.bind(this);\r\n    this.state = {\r\n      productDetails: {},\r\n      productImage: {},\r\n      activeTab: 1\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.store.fetchProductDetails(1)\r\n      .then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        this.setState({ productDetails: data })\r\n      });\r\n    this.props.store.fetchProductImages(1)\r\n      .then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        this.setState({ productImage: data })\r\n      });\r\n  }\r\n\r\n  changeTab(activeTab) {\r\n    this.setState({\r\n      activeTab: activeTab\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let { allUsers } = this.state;\r\n\r\n    //   console.log(oneRow[0]);\r\n\r\n    return (\r\n      <div className=\"product-main-wrapper\">\r\n        <div class=\"c-container mt-5\">\r\n          <div class=\"breadcrumb-txt\">&lt; Men</div>\r\n        </div>\r\n        <section class=\"product-description-section\">\r\n          <div class=\"c-container\">\r\n            <div class=\"p-row\">\r\n              <div class=\"p-col-sm\">\r\n                <div class=\"product-desc-setting\">\r\n                  <div className=\"clearfix\">\r\n                    <div className=\"l-content\">\r\n                      <h1>{this.state.productDetails.name}</h1>\r\n                      <label>{this.state.productDetails.description}</label>\r\n                    </div>\r\n                    <div className=\"r-content\">\r\n                      <span className=\"lg-txt\">${this.state.productDetails.price} USD</span>\r\n                      <label>154 Reviews</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"product-desc-card\">\r\n                    <ul class=\"tab-ul clearfix\">\r\n                      <li className={`${this.state.activeTab === 1 ? 'active': ''}`} onClick={()=> this.changeTab(1)}>\r\n                        <a href=\"#\">MEN</a>\r\n                      </li>\r\n                      <li className={`${this.state.activeTab === 2 ? 'active': ''}`}  onClick={()=> this.changeTab(2)}>\r\n                        <a href=\"#\">WOMEN</a>\r\n                      </li>\r\n                    </ul>\r\n                    {this.state.activeTab === 1 ?\r\n                    <div class=\"tab-content\" >\r\n                      <div className=\"upper-content-wrapper\">\r\n                        <div>\r\n                          <label>SELECT COLOR</label>\r\n                          <ul class=\"color-selector-ul\">\r\n                            <li class=\"white-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"d-blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"black-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"red-color  active\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"yellow-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"green-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"cream-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"d-cream-color\">\r\n                              <span></span>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"clearfix\">SELECT SIZE <span className=\"size-txt\">Size &amp; Fit Guide</span></label>\r\n                          <div className=\"size-btn-wrapper\">\r\n                            <button>5</button>\r\n                            <button>5.5</button>\r\n                            <button className=\"not-available\">6</button>\r\n                            <button>6.5</button>\r\n                            <button>7</button>\r\n                            <button className=\"not-available\">7.5</button>\r\n                            <button className=\"active\">8</button>\r\n                            <button className=\"not-available\">8.5</button>\r\n                            <button className=\"not-available\">9</button>\r\n                            <button className=\"not-available\">9.5</button>\r\n                            <button>10</button>\r\n                            <button>10.5</button>\r\n                            <button className=\"not-available\">11</button>\r\n                            <button>11.5</button>\r\n                            <button>12</button>\r\n                            <button className=\"not-available\">12.5</button>\r\n                            <button>13</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <button onClick={this.props.addToBag} className=\"add-cart-btn\">add to bag</button>\r\n                    </div> :\r\n                    <div class=\"tab-content\">\r\n                      <div className=\"upper-content-wrapper\">\r\n                        <div>\r\n                          <label>SELECT COLOR</label>\r\n                          <ul class=\"color-selector-ul\">\r\n                            <li class=\"white-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"d-blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"black-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"red-color  active\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"yellow-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"green-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"cream-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"blue-color\">\r\n                              <span></span>\r\n                            </li>\r\n                            <li class=\"d-cream-color\">\r\n                              <span></span>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"clearfix\">SELECT SIZE <span className=\"size-txt\">Size &amp; Fit Guide</span></label>\r\n                          <div className=\"size-btn-wrapper\">\r\n                            <button>5</button>\r\n                            <button>5.5</button>\r\n                            <button className=\"not-available\">6</button>\r\n                            <button>6.5</button>\r\n                            <button>7</button>\r\n                            <button className=\"not-available\">7.5</button>\r\n                            <button className=\"active\">8</button>\r\n                            <button className=\"not-available\">8.5</button>\r\n                            <button className=\"not-available\">9</button>\r\n                            <button className=\"not-available\">9.5</button>\r\n                            <button>10</button>\r\n                            <button>10.5</button>\r\n                            <button className=\"not-available\">11</button>\r\n                            <button>11.5</button>\r\n                            <button>12</button>\r\n                            <button className=\"not-available\">12.5</button>\r\n                            <button>13</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <button className=\"add-cart-btn\">add to bag</button>\r\n                    </div>\r\n                    }\r\n                  </div>\r\n                  <p className=\"sm-txt txt-center\">Worldwide Shipping + Free Returns</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"p-col-lg\">\r\n                <img class=\"d-block w-100\" src={this.state.productImage.url} alt=\"First slide\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToDoBoard;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"../TodoBoard/ToDoBoard.scss\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\n\r\n@inject('todoStore')\r\n@observer class ToDoBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.addNewRow = this.addNewRow.bind(this);\r\n        // this.submit = this.submit.bind(this);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    renderSimilarProducts(){\r\n        console.log(this.props.allImages);\r\n        return this.props.allImages.map((image)=>{\r\n            return (<div class=\"suggestion-col\">\r\n                    <div class=\"suggestion-card\">\r\n                    <div className=\"imageWrapper\"><img class=\"img-100\" alt=\"suggestion-image\" src={image.url}/></div>\r\n                    <div class=\"card-text\">\r\n                        <span class=\"item-title\">White Canvas</span>\r\n                        <span class=\"item-price\">$79</span>\r\n                    </div>\r\n                    </div>\r\n                </div>)\r\n        });\r\n    }\r\n  \r\n    \r\n    render(){\r\n        var settings = {\r\n            // dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            nextArrow: <SampleNextArrow />,\r\n            prevArrow: <SamplePrevArrow />,\r\n            responsive: [\r\n                {\r\n                  breakpoint: 1024,\r\n                  settings: {\r\n                    slidesToShow: 1,\r\n                    // slidesToScroll: ,\r\n                    infinite: true,\r\n                   // dots: true\r\n                  }\r\n                },\r\n            ] \r\n          };\r\n        return(\r\n                <div>\r\n                    <section class=\"suggestion-section\">\r\n                        <div class=\"c-container\">\r\n                            <h2>You'll Also Like</h2>\r\n                            <div class=\"suggestion-row clearfix\">\r\n                                <Slider {...settings}>\r\n                                        {\r\n                                             this.renderSimilarProducts()\r\n                                        }  \r\n                                </Slider> \r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>   \r\n\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nfunction SampleNextArrow(props) {\r\n    const { className, style, onClick } = props;\r\n    return (\r\n      <div\r\n        className={className}\r\n        style={{  display: \"block\", background: \"#D3D3D3\" }}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  }\r\n  \r\nfunction SamplePrevArrow(props){\r\n    const { className, style, onClick } = props;\r\n    return (\r\n      <div\r\n        className={className}\r\n        style={{  display: \"block\", background: \"#D3D3D3\" }}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  }\r\n\r\nexport default ToDoBoard;","import React, { Component } from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport \"./ToDoBoard.scss\";\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer'\r\nimport ProductDetail from '../ProductDetail/ProductDetail';\r\nimport RecommendedProducts from '../RecommendedProducts/RecommendedProducts';\r\n\r\n@inject('todoStore')\r\n@observer class ToDoBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.addNewRow = this.addNewRow.bind(this);\r\n        // this.submit = this.submit.bind(this);\r\n        this.state = {\r\n           allImages:[],\r\n           cartCount:0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.todoStore.fetchAllImages()\r\n        .then((response)=>{\r\n            return response.json();\r\n        }).then((data)=>{\r\n           this.setState({ allImages : data })\r\n        });\r\n    }\r\n    addToBag = () =>{\r\n        let { cartCount } = this.state;\r\n        this.setState({ cartCount: (cartCount + 1) });\r\n    }\r\n\r\n  \r\n    \r\n    render(){\r\n        return(\r\n                <div>\r\n                        <Header\r\n                           store={this.props.todoStore}\r\n                           cartCount={this.state.cartCount}\r\n\r\n                        />\r\n                        <ProductDetail \r\n                           addToBag={this.addToBag}\r\n                           store={this.props.todoStore}\r\n                        />\r\n                        <RecommendedProducts \r\n                           store={this.props.todoStore}\r\n                           allImages={this.state.allImages}\r\n                        />\r\n                        <Footer \r\n                        />\r\n                </div>   \r\n\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoBoard;","import React from 'react';\r\nimport ToDoBoard from \"./components/TodoBoard/ToDoBoard\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoBoard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { observable, action } from \"mobx\";\r\n\r\nconst ROOT_URL =  'https://anatta-demo-app.herokuapp.com/api/';\r\nexport default {\r\n  \r\n    getProductDetails(id){\r\n        return fetch(`${ROOT_URL}products/${id}`);\r\n    },\r\n    getProductImage(id){\r\n        return fetch(`${ROOT_URL}images/${id}`);\r\n    },\r\n    getAllImages(){\r\n        return fetch(`${ROOT_URL}images/`);\r\n    }\r\n    // getPosts(id){\r\n    //     return  fetch(`${ROOT_URL}posts?${id}&skip=0&limit=10`);\r\n    // },\r\n    // getPostDetails(id){\r\n    //     return  fetch(`${ROOT_URL}posts/${id}`);\r\n    // },\r\n    // getPostComments(id){\r\n    //     return  fetch(`${ROOT_URL}comments?postId=${id}`);\r\n    // },\r\n    // deletePosts(id){\r\n    //     return  fetch(`${ROOT_URL}posts/${id}`, {\r\n    //         method: 'delete'\r\n    //       });\r\n    // }\r\n}","import { observable, action } from \"mobx\";\r\nimport datafetcher from '../Fetchers/DataFetcher'\r\n\r\nclass TodoStore {\r\n\r\n    @action\r\n    fetchProductDetails(id){\r\n         return datafetcher.getProductDetails(id);\r\n    }\r\n    @action\r\n    fetchProductImages(id){\r\n         return datafetcher.getProductImage(id);\r\n    }\r\n    @action\r\n    fetchAllImages(){\r\n        return datafetcher.getAllImages();\r\n    }\r\n\r\n}\r\n\r\nexport default TodoStore;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"mobx-react\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport todoStore from \"./stores/TodoStore\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = new todoStore();\r\nReactDOM.render(\r\n    <Provider todoStore={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}